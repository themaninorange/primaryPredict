2+2
x=7
x
y=5
y
x+y
ls()
remove(x)
2+2
8-5
4*7
7/3
2^3
x=5
x
x=x+20
x
x=c(7,9,3,-8,5)
x
x[1]
x[4]
x=3:9
x
x=rep(15,4)
x
x=1:5
y=6:10
x+y
z=c(x,y)
z
length(x)
length(z)
x*y
x^2
x/y
x%*%y
help(rep)
args(rep)
x=1:3
y=4:6
z=7:9
A=cbind(x,y,z)
A
B=matrix(c(10,11,12,50,51,52)3,2)
B=matrix(c(10,11,12,50,51,52),3,2)
B
B=matrix(c(10,11,12,50,51,52),3,2,byrow="true")
B
dim(B)
dim(B)[1]
dim(B)[2]
A=matrix(1:4,2,2,byrow="true")
A
B=matrix(5:8,2,2byrow="true")
B=matrix(5:8,2,2,byrow="true")
b
B
A+B
A*B
A%*%B
A^2
A+7
A%*%A
t(A)
diag(A)
diag(B)
help("diag")
A^(-1)
solve(A)
solve(A)%*%A
A=matrix(1:4,2,2,byrow="true")
C=matrix(20:23,2,2,byrow="true")
A
C
B=solve(A,C)
B
A%*%B
I=diag(2)
B=solve(A,I)
B
A%*%B
B=solve(A)
B
x=(1:5)^2
x
x[3]
x[c(1,2,5)]
x[2:4]
A=matrix(1:15,3,5,byrow="true")
A
help("matrix")
A[3,4]
A[1,]
A[,4]
A[c(1,3),c(1,2,4)]
3==7
3!=7
3<7
3>7
3<=7
3>=7
x=1:10
x==7
x<=7
x[x<=7]
TRUE & FALSE
1 & 0
TRUE
FALSE
TRUE | FALSE
!TRUE
P=c(TRUE,TRUE,FALSE,FALSE)
Q=c(TRUE,FALSE,TRUE,FALSE)
cbind(P,Q,P&Q)
cbind(P,Q,P|Q)
cbind(P,!P)
if(5>1){print('Yes,it is.')}
if(5<1){print('Yes,itis.')}
if(5<1){print('Yes,itis.')}else{print('No, it is not.')}
x=rep(1,10)
x
for(i in 1:10){}
for(i in 1:10){}
for(i in 1:10){x[i]=i^2}
x
mysum=function(x,y){x+y}
mysum(5,3)
L=list(x=5,y=1:4,z=diag(7))
L$x
L$y
L$z
myops(5,3)$sum
myops=function(x,y){mysum=x+y my diff=x-y myprod=x*y myquot=x/y list(sum=mysum,diff=mydiff,prod=myprod,quot=myquot)}
myops=function(x,y){
mysum=x+y
mydiff=x-y
myprod=x*y
myquot=x/y
list(sum=mysum,diff=mydiff,prod=myprod,quot=myquot)
}
myops(5,3)$sum
myops(5,3)$diff
myops(5,3)$prod
myops(5,3)$quot
x=rnorm(1000,100,15)
x
mean(x)
sd(x)
sum(x)
hist(x)
u=runif(1000,10,20)
min(u)
max(u)
sortedu=sort(u)
sortedu
sortedu[1]
sortedu[1000]
x=rnorm(1000,100,15)
epsilon=rnorm(1000,0,5)
y=x+epsilon
plot(x,y)
plot(-10:10,(-10:10^2))
plot(-10:10,(-10:10)^2)
plot(-10:10,(-10:10)^2,type=l)
plot(-10:10,(-10:10)^2,type='l')
plot(-10:10,(-10:10)^2)
plot(x,y)
lines(50:150,50:150,col='red')
load("/Users/mikaelajordan/Dropbox/DataMining/Scraping/Visualization/tw.data.Rda")
library(mlbench)
install.packages('mlbench')
library(mlbench)
data(HouseVotes84)
data <- HouseVotes84
head(data)
true.class <- data[ , 1]
head(true.class)
classes <- levels(true.class)
prior <- prop.table(table(true.class))
prior
train.x <- data[ , -1]
numpredictors <- ncol(train.x)
levels(train.x$V3)
library(e1071)
help("naiveBayes")
addNA <- function(fac){
newlevels <- c(levels(fac), "na")
levels(fac) <- newlevels
fac[is.na(fac)] <- 'na'
return(fac)
}
levels(train.x$V3)
train.x <- data.frame(lapply(train.x, addNA))
levels(train.x$V3)
help(prop.table)
prop.table(table(true.class, train.x$V3))
prop.table(table(true.class, train.x$V3), 1)
get.cond.prob <- function(v){
return(prop.table(table(true.class, v), 1))
}
cond.probs <- lappy(train.x, get.cond.prob)
cond.probs <- lapply(train.x, get.cond.prob)
cond.probs
source('~/Dropbox/DataMining/Scraping/Visualization/Results_Demographics_MJ/sql_functions.R')
#### Playing with the Data ####
library(twitteR)
# Let's look at these tweet dataframes!
setwd('~/Dropbox/DataMining/Scraping/Visualization/tweets')
tweet_files <- list.files()
for(i in 1:51){
load(tweet_files[i])
}
dfs <- Filter(function(x) is(x, "data.frame"), mget(ls()))
data <- do.call(rbind, dfs)
data <- data[-which(data$text == 0), ]
rm(list=ls(pattern="Apr"))
rm(dfs)
rm(tweet_files)
rm(i)
data$date <- substr(row.names(data), 1, 8)
row.names(data) <- NULL
colnames(data.tweets) <- c("tweet_id", "keyword", "text", "fips_code", "rt", "user_id", "tweet_date", "orig_id")
data.tweets <- data.tweets[, c(1:7, 10, 8:9)]
keep <- c(1:5, 7:9, 13:14, 29:38, 53:59, 61:64)
data.tweets <- data[keep, c(8, 17, 1, 18, 13, 11, 19)]
data.tweets$orig_id <- data.tweets$id
data.tweets$orig_id[1:3] <- c(data.tweets$id[4], data.tweets$id[4], data.tweets$id[4])
data.tweets$orig_id[7] <- data.tweets$id[8]
data.tweets$orig_id[11:14] <- c(data.tweets$id[15], data.tweets$id[15], data.tweets$id[15], data.tweets$id[15])
data.tweets$orig_id[16:19] <- c(data.tweets$id[20], data.tweets$id[20], data.tweets$id[20], data.tweets$id[20])
data.tweets$date <- paste0(substr(tolower(data.tweets$date), 1, 3), '-', '0', substr(data.tweets$date, 4, 4), '-', '2016')
data.tweets$text_clean <- twat.clean(data.tweets)
library(tm)
twat.clean = function(twit.dat){
# Not sure if necessary, but fuck it removing it anyways
twit.dat$text.clean = gsub('<.*?>', '', twit.dat$text)
# Removing punctuation
twit.dat$text.clean = gsub('[[:punct:]]', '', twit.dat$text.clean)
# Removing Emojis and making everything text
twit.dat$text.clean = sapply(twit.dat$text.clean, function(row) iconv(row, "latin1", "ASCII",
sub = ""))
# Making everything lower case
twit.dat$text.clean = tolower(twit.dat$text.clean)
# Removing stopwords
twit.dat$text.clean = removeWords(twit.dat$text.clean, stopwords("en"))
}
data.tweets$text_clean <- twat.clean(data.tweets)
View(data.tweets)
data.tweets <- data.tweets[, c(1:2, 9, 4:8)]
colnames(data.tweets)[3] <- 'text'
out_file <- '~/Dropbox/DataMining/Scraping/Visualization/Results_Demographics_MJ/DataBaseCreation/tweets.txt'
columns <- c('VARCHAR(18)', 'VARCHAR(20)', 'VARCHAR(140)', 'VARCHAR(5)', 'NUMBER(1)', 'VARCHAR(20)', 'DATE', 'VARCHAR(18)')
constraints <- 'CONSTRAINT tweets_pk PRIMARY KEY (tweet_id)'
table.creation(out_file, data.tweets, columns, constraints, 'tweets')
